c Computes v^T v for a vector 
set $dotproduct
    (
      join \#1 \#2 multiply .
collapse \ans add "#" .
    ) .


c product A B computes A^T B 
set $product
    (
      mov $#1 $A .
      mov $#2 $B .
      set $i $#1 .
      set $out [ list . ] .
      while ( exist-in i \B . )
            (
              set $one [ get i \B . ] .
              set $dotone ( dotproduct \#1 one . ) .
              do-to-all dotone \A .
              mov $ans $res .
              in \out ( set i res . ) .
              next i .
              mov $ans $i .
            ) .
      answer \out .
    ) .

c Computes A^T 
set $transpose
    (
      set $i $#1 .
      set $out [ list . ] .
      print out .
      while ( exist-in i [ get $#1 \#1 . ] . )
            (
              do-to-all ( get i \#1 . ) \#1 .
              mov $ans $res .
              in \out ( set i res . ) .
              next i .
              mov $ans $i .
            ) .
      answer \out .
    ) .

set $A [ list [ list 1 2 . ] [ list 3 4 . ] . ] .
set $B [ list [ list -2 3 . ] [ list -10 3 . ] . ] .

product A B .
